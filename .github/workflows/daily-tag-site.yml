# When pushing a tag. this workflow will trigger site deployment and fixed version address comments

name: Tag Sites

env:
  # Required, URL to upstream (fork base)
  UPSTREAM_URL: "https://github.com/ant-design/ant-design.git"
  # Required, token to authenticate bot, could use ${{ secrets.GITHUB_TOKEN }}
  # Over here, we use a PAT instead to authenticate workflow file changes.
  WORKFLOW_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Optional, defaults to main
  UPSTREAM_BRANCH: "master"
  # Optional, defaults to UPSTREAM_BRANCH
  DOWNSTREAM_BRANCH: ""
  # Optional fetch arguments
  FETCH_ARGS: ""
  # Optional merge arguments
  MERGE_ARGS: "--no-ff"
  # Optional push arguments
  PUSH_ARGS: ""
  # Optional toggle to spawn time logs (keeps action active)
  SPAWN_LOGS: "false" # "true" or "false"

on:
  schedule:
    - cron: '0 7 * * *' # ron on 7am every day
  # Allows manual workflow run (must in default branch to work)
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-upstream:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Sync to Upstream Repository
        uses: dabreadman/sync-upstream-repo@v1.3.0
        with:
          upstream_repo: ${{ env.UPSTREAM_URL }}
          upstream_branch: ${{ env.UPSTREAM_BRANCH }}
          downstream_branch: ${{ env.DOWNSTREAM_BRANCH }}
          token: ${{ env.WORKFLOW_TOKEN }}
          fetch_args: ${{ env.FETCH_ARGS }}
          merge_args: ${{ env.MERGE_ARGS }}
          push_args: ${{ env.PUSH_ARGS }}
          spawn_logs: ${{ env.SPAWN_LOGS }}

  build-site:
    name: build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 8.12.1


      - name: add content path
        run: |
          sed -i 's/});/manifest: {basePath: "\/mirror\/pro-components\/",}, base: "\/mirror\/pro-components\/", publicPath: "\/mirror\/pro-components\/"});/' .dumirc.ts

      - name: build
        env:
          TEST_UI: 'preview'
        run: |
          pnpm install 
          pnpm run build
          pnpm run dumi

      - run: |
          zip -r pro-components.zip dist

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::pro-components_$(date +"%Y.%m.%d_%H_%M_%S")"
      - name: GH Release
        # You may pin to the exact commit or the version.
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files:  pro-components.zip
